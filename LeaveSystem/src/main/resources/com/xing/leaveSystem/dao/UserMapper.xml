<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xing.leaveSystem.dao.UserMapper">

	<resultMap type="com.xing.leaveSystem.entity.User" id="UserResult">
		<result property="userId" column="user_id"/>
		<result property="userName" column="username"/>
		<result property="email" column="email"/>
		<result property="password" column="password"/>
	</resultMap>
	
	<!-- 根据 用户名分页查询用户信息-->
	<select id="find" parameterType="Map" resultMap="UserResult">
		select * from leave_system_user
		<where>
			<if test="userName!=null and userName!='' ">
				 and username like #{userName}
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<!-- 获取分页查询的记录数 -->
	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from leave_system_user
		<where>
			<if test="userName!=null and userName!='' ">
				 and username like #{userName}
			</if>
		</where>
	</select>
	
	<!-- 通过用户名查找用户信息 -->
	<select id="findByUserName" resultMap="UserResult">
		select * from leave_system_user 
		<where>
			<if test="userName!=null and userName!=''">
				username=#{userName}
			</if>
		</where>
	</select>
	
	<!-- 保存用户信息 -->
	<insert id="add" parameterType="com.xing.leaveSystem.entity.User">
		insert into leave_system_user(user_id,username,email,password) values
		(
			#{userId,jdbcType=VARCHAR},
			#{userName,jdbcType=VARCHAR},
			#{email,jdbcType=VARCHAR},
			#{password,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 更新普通用户信息 -->
	<update id="update" parameterType="com.xing.leaveSystem.entity.User">
		update leave_system_user 
		<set>
			<trim suffixOverrides=",">
				<if test="userName!=null and userName!=''">username=#{userName,jdbcType=VARCHAR},</if>
				<if test="password!=null and password!=''">password=#{password,jdbcType=VARCHAR},</if>
				<if test="email!=null and email!=''">email=#{email,jdbcType=VARCHAR},</if>
			</trim>
		</set>
		<where>
			user_id=#{userId}
		</where>
	</update>
	
	<!-- 根据 用户的id来删除用户信息 -->
	<delete id="delete">
		delete from leave_system_user
		<where>
			user_id=#{userId}
		</where>
	</delete>
	
</mapper> 